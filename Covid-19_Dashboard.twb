<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0818.1843                               -->
<workbook original-version='18.1' source-build='2021.2.2 (20212.21.0818.1843)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='covid_19_data' inline='true' name='federated.1213rwk0lh4e9d19rm2em0q3atwd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_19_data' name='textscan.0t11dca1pe0jr11481xdl0s1klxj'>
            <connection class='textscan' directory='C:/Users/pc/Desktop' filename='covid_19_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0t11dca1pe0jr11481xdl0s1klxj' name='covid_19_data.csv' table='[covid_19_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='SNo' ordinal='0' />
            <column datatype='date' name='ObservationDate' ordinal='1' />
            <column datatype='string' name='Province/State' ordinal='2' />
            <column datatype='string' name='Country/Region' ordinal='3' />
            <column datatype='string' name='Last Update' ordinal='4' />
            <column datatype='real' name='Confirmed' ordinal='5' />
            <column datatype='real' name='Deaths' ordinal='6' />
            <column datatype='real' name='Recovered' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0t11dca1pe0jr11481xdl0s1klxj' name='covid_19_data.csv' table='[covid_19_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='SNo' ordinal='0' />
            <column datatype='date' name='ObservationDate' ordinal='1' />
            <column datatype='string' name='Province/State' ordinal='2' />
            <column datatype='string' name='Country/Region' ordinal='3' />
            <column datatype='string' name='Last Update' ordinal='4' />
            <column datatype='real' name='Confirmed' ordinal='5' />
            <column datatype='real' name='Deaths' ordinal='6' />
            <column datatype='real' name='Recovered' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNo</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SNo]</local-name>
            <parent-name>[covid_19_data.csv]</parent-name>
            <remote-alias>SNo</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_data.csv_5FC7B1103D744FB1A5D49D8370C394E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ObservationDate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[ObservationDate]</local-name>
            <parent-name>[covid_19_data.csv]</parent-name>
            <remote-alias>ObservationDate</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_data.csv_5FC7B1103D744FB1A5D49D8370C394E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province/State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province/State]</local-name>
            <parent-name>[covid_19_data.csv]</parent-name>
            <remote-alias>Province/State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_data.csv_5FC7B1103D744FB1A5D49D8370C394E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[covid_19_data.csv]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_data.csv_5FC7B1103D744FB1A5D49D8370C394E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Update</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Last Update]</local-name>
            <parent-name>[covid_19_data.csv]</parent-name>
            <remote-alias>Last Update</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_data.csv_5FC7B1103D744FB1A5D49D8370C394E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[covid_19_data.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_data.csv_5FC7B1103D744FB1A5D49D8370C394E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[covid_19_data.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_data.csv_5FC7B1103D744FB1A5D49D8370C394E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[covid_19_data.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_data.csv_5FC7B1103D744FB1A5D49D8370C394E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Not Null' datatype='real' name='[Calculation_1183602301917593600]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN([Deaths])' />
      </column>
      <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
      <column caption='Observation Date' datatype='date' name='[ObservationDate]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='real' name='[Recovered]' role='measure' type='quantitative' />
      <column caption='S No' datatype='integer' name='[SNo]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_19_data.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_data.csv_5FC7B1103D744FB1A5D49D8370C394E5]' role='measure' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Country/Region, Province/State'>
          <field>[Country/Region]</field>
          <field>[Province/State]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Recovered:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1213rwk0lh4e9d19rm2em0q3atwd]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_19_data.csv' id='covid_19_data.csv_5FC7B1103D744FB1A5D49D8370C394E5'>
            <properties context=''>
              <relation connection='textscan.0t11dca1pe0jr11481xdl0s1klxj' name='covid_19_data.csv' table='[covid_19_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='SNo' ordinal='0' />
                  <column datatype='date' name='ObservationDate' ordinal='1' />
                  <column datatype='string' name='Province/State' ordinal='2' />
                  <column datatype='string' name='Country/Region' ordinal='3' />
                  <column datatype='string' name='Last Update' ordinal='4' />
                  <column datatype='real' name='Confirmed' ordinal='5' />
                  <column datatype='real' name='Deaths' ordinal='6' />
                  <column datatype='real' name='Recovered' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='covid_19_india' inline='true' name='federated.0w6thte036kiq717ikjb00oplrsz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_19_india' name='textscan.09piu201hjem1r1d91v430ccea4w'>
            <connection class='textscan' directory='C:/Users/pc/Downloads' filename='covid_19_india.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.09piu201hjem1r1d91v430ccea4w' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Sno' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Time' ordinal='2' />
            <column datatype='string' name='State/UnionTerritory' ordinal='3' />
            <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
            <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
            <column datatype='integer' name='Cured' ordinal='6' />
            <column datatype='integer' name='Deaths' ordinal='7' />
            <column datatype='integer' name='Confirmed' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.09piu201hjem1r1d91v430ccea4w' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Sno' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Time' ordinal='2' />
            <column datatype='string' name='State/UnionTerritory' ordinal='3' />
            <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
            <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
            <column datatype='integer' name='Cured' ordinal='6' />
            <column datatype='integer' name='Deaths' ordinal='7' />
            <column datatype='integer' name='Confirmed' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sno</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sno]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Sno</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_91843F121D3B4F6FBA9B72B1CEC03F4B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_91843F121D3B4F6FBA9B72B1CEC03F4B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_91843F121D3B4F6FBA9B72B1CEC03F4B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/UnionTerritory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State/UnionTerritory]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>State/UnionTerritory</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_91843F121D3B4F6FBA9B72B1CEC03F4B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedIndianNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedIndianNational]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>ConfirmedIndianNational</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_91843F121D3B4F6FBA9B72B1CEC03F4B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedForeignNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedForeignNational]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>ConfirmedForeignNational</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_91843F121D3B4F6FBA9B72B1CEC03F4B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cured]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Cured</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_91843F121D3B4F6FBA9B72B1CEC03F4B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_91843F121D3B4F6FBA9B72B1CEC03F4B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_91843F121D3B4F6FBA9B72B1CEC03F4B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='%cured_india' datatype='real' name='[Calculation_1183602301931761666]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Cured])/SUM([Confirmed]))*100' />
      </column>
      <column caption='%death_india' datatype='real' name='[Calculation_1183602301932183555]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Deaths])/SUM([Confirmed]))*100' />
      </column>
      <column caption='%cured' datatype='real' name='[Calculation_1183602301942947844]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(MAX([Cured])/MAX([Confirmed]))*100' />
      </column>
      <column caption='%death' datatype='real' name='[Calculation_1183602301943214085]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(MAX([Deaths])/MAX([Confirmed]))*100' />
      </column>
      <column caption='Confirmed Foreign National' datatype='string' name='[ConfirmedForeignNational]' role='dimension' type='nominal' />
      <column caption='Confirmed Indian National' datatype='string' name='[ConfirmedIndianNational]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_19_india.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_india.csv_91843F121D3B4F6FBA9B72B1CEC03F4B]' role='measure' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cured]' derivation='Max' name='[max:Cured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1183602301931761666]' derivation='User' name='[usr:Calculation_1183602301931761666:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1183602301932183555]' derivation='User' name='[usr:Calculation_1183602301932183555:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1183602301942947844]' derivation='User' name='[usr:Calculation_1183602301942947844:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1183602301943214085]' derivation='User' name='[usr:Calculation_1183602301943214085:qk]' pivot='key' type='quantitative' />
      <group caption='Action (State/UnionTerritory)' hidden='true' name='[Action (State/UnionTerritory)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State/UnionTerritory]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State/UnionTerritory:nk]' palette='brown_10_0' type='palette'>
            <map to='#9f3632'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#a33a32'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#a73e32'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#ab4232'>
              <bucket>&quot;Unassigned&quot;</bucket>
            </map>
            <map to='#ac4332'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#af4833'>
              <bucket>&quot;Telengana&quot;</bucket>
            </map>
            <map to='#b34d34'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#b65235'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#b95837'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#bc5e3a'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#be633d'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#c06940'>
              <bucket>&quot;Nagaland\#&quot;</bucket>
            </map>
            <map to='#c36e44'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
            <map to='#c37045'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
            <map to='#c57348'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
            <map to='#c7794c'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#ca7e4f'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#cd8351'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#d18954'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#d48d54'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#d79255'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#db9755'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#de9c59'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#e0a15e'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='#e3a663'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#e4ab68'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#e6b06f'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#e8b576'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#e9bb7d'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#eac086'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#ebc58f'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#eccb98'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#ecd0a4'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#edd5b0'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#eedbbd'>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0w6thte036kiq717ikjb00oplrsz].[max:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301931761666:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301942947844:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0w6thte036kiq717ikjb00oplrsz].[max:Cured:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0w6thte036kiq717ikjb00oplrsz].[max:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301932183555:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301943214085:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_19_india.csv' id='covid_19_india.csv_91843F121D3B4F6FBA9B72B1CEC03F4B'>
            <properties context=''>
              <relation connection='textscan.09piu201hjem1r1d91v430ccea4w' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='Sno' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='string' name='Time' ordinal='2' />
                  <column datatype='string' name='State/UnionTerritory' ordinal='3' />
                  <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
                  <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
                  <column datatype='integer' name='Cured' ordinal='6' />
                  <column datatype='integer' name='Deaths' ordinal='7' />
                  <column datatype='integer' name='Confirmed' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_035D745F61474A609B4F225205155619]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid 19 India State wise analysis' type='sheet' worksheet='state-wise no. of confirmed cases' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid 19 India State wise analysis' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_9559E2F5A82247D9B682C3CD1460146F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid 19 India State wise analysis' type='sheet' worksheet='statistics of chosen state' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid 19 India State wise analysis' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_48FB2FA1E59C49B2A15DD2CFA20D64FB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid 19 India State wise analysis' type='sheet' worksheet='Comparison of death vs cured if choosen state' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid 19 India State wise analysis' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_4987460B0A9347A5AAB17993AE5A6667]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid-19 India Analysis' type='sheet' worksheet='percentage distributed of confirmed cases of each state' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid-19 India Analysis' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_510AC75108FC4286941C44CADFF6E075]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid-19 India Analysis' type='sheet' worksheet='percentage comparison of Death vs cured' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid-19 India Analysis' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_3CE0A97384C549A99A0CD6AB7D49AAD1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid-19 India Analysis' type='sheet' worksheet='Covid-19 India' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid-19 India Analysis' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Absolute Number'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data' name='federated.1213rwk0lh4e9d19rm2em0q3atwd' />
          </datasources>
          <datasource-dependencies datasource='federated.1213rwk0lh4e9d19rm2em0q3atwd'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column caption='Observation Date' datatype='date' name='[ObservationDate]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ObservationDate]' derivation='Month-Trunc' name='[tmn:ObservationDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Recovered:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[Multiple Values]' scope='rows' value='Absolute Number' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[tmn:ObservationDate:ok]' value='#ffffff' />
            <format attr='color' field='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[Multiple Values]' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[Multiple Values]</rows>
        <cols>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[tmn:ObservationDate:ok]</cols>
      </table>
      <simple-id uuid='{FDA5B67D-63FF-4BB6-8725-9F554731F3D5}' />
    </worksheet>
    <worksheet name='Absolute Number (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Absolute Number</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data' name='federated.1213rwk0lh4e9d19rm2em0q3atwd' />
          </datasources>
          <datasource-dependencies datasource='federated.1213rwk0lh4e9d19rm2em0q3atwd'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column caption='Observation Date' datatype='date' name='[ObservationDate]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ObservationDate]' derivation='Month-Trunc' name='[tmn:ObservationDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Recovered:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' context='true' filter-group='3'>
            <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</column>
            <column>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[Multiple Values]' scope='rows' value='Absolute Number' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[tmn:ObservationDate:ok]' value='#ffffff' />
            <format attr='color' field='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[Multiple Values]' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[Multiple Values]</rows>
        <cols>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[tmn:ObservationDate:ok]</cols>
      </table>
      <simple-id uuid='{7AA4CAC5-53F5-4F41-9502-C086AC15FD1F}' />
    </worksheet>
    <worksheet name='Comparison of death vs cured if choosen state'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0w6thte036kiq717ikjb00oplrsz' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6thte036kiq717ikjb00oplrsz'>
            <column caption='%cured' datatype='real' name='[Calculation_1183602301942947844]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MAX([Cured])/MAX([Confirmed]))*100' />
            </column>
            <column caption='%death' datatype='real' name='[Calculation_1183602301943214085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MAX([Deaths])/MAX([Confirmed]))*100' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1183602301942947844]' derivation='User' name='[usr:Calculation_1183602301942947844:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1183602301943214085]' derivation='User' name='[usr:Calculation_1183602301943214085:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w6thte036kiq717ikjb00oplrsz].[Action (State/UnionTerritory)]'>
            <groupfilter function='member' level='[State/UnionTerritory]' member='&quot;Maharashtra&quot;' user:ui-action-filter='[Action1_035D745F61474A609B4F225205155619]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:State/UnionTerritory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</column>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[Action (State/UnionTerritory)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301943214085:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0w6thte036kiq717ikjb00oplrsz].[max:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301942947844:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301943214085:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301942947844:qk] + ([federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301943214085:qk] + [federated.0w6thte036kiq717ikjb00oplrsz].[max:Confirmed:qk]))</rows>
        <cols>([federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk] * [federated.0w6thte036kiq717ikjb00oplrsz].[twk:Date:qk])</cols>
      </table>
      <simple-id uuid='{149B54FC-0042-42FD-9558-75FB772FE722}' />
    </worksheet>
    <worksheet name='Confirmed Numbers'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data' name='federated.1213rwk0lh4e9d19rm2em0q3atwd' />
          </datasources>
          <datasource-dependencies datasource='federated.1213rwk0lh4e9d19rm2em0q3atwd'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Recovered:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' context='true' filter-group='3'>
            <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</column>
            <column>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#000000' />
            <format attr='color' data-class='total' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{668BF1E9-36E3-4125-ADDF-D3070D07BD6E}' />
    </worksheet>
    <worksheet name='Covid-19 India'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0w6thte036kiq717ikjb00oplrsz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0w6thte036kiq717ikjb00oplrsz'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0w6thte036kiq717ikjb00oplrsz].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0w6thte036kiq717ikjb00oplrsz].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[Latitude (generated)]</column>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0w6thte036kiq717ikjb00oplrsz].[max:Confirmed:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' />
              <text column='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' />
              <color column='[federated.0w6thte036kiq717ikjb00oplrsz].[max:Confirmed:qk]' />
              <geometry column='[federated.0w6thte036kiq717ikjb00oplrsz].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State/UnionTerritory:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>No. of Confirmed Cases:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[max:Confirmed:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w6thte036kiq717ikjb00oplrsz].[Latitude (generated)]</rows>
        <cols>[federated.0w6thte036kiq717ikjb00oplrsz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{EC9A9339-2E2C-4CD0-B8CA-5CF8BB6D72B6}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data' name='federated.1213rwk0lh4e9d19rm2em0q3atwd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1213rwk0lh4e9d19rm2em0q3atwd'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' context='true' filter-group='3'>
            <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' />
              <geometry column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[Latitude (generated)]</rows>
        <cols>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9AB1CE1F-2664-4034-8A84-E3E9A93BB4E2}' />
    </worksheet>
    <worksheet name='Maximum confirmed cases state wise'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0w6thte036kiq717ikjb00oplrsz' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6thte036kiq717ikjb00oplrsz'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0w6thte036kiq717ikjb00oplrsz].[max:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' value='28' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0w6thte036kiq717ikjb00oplrsz].[max:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w6thte036kiq717ikjb00oplrsz].[max:Confirmed:qk]</rows>
        <cols>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</cols>
      </table>
      <simple-id uuid='{33F0C2E9-80C2-40EC-9FCC-CA696FA946AD}' />
    </worksheet>
    <worksheet name='Q.1.'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Q.1.What are the top 5 States/Province of different countries with maximum confirmed cases if country is chosen?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data' name='federated.1213rwk0lh4e9d19rm2em0q3atwd' />
          </datasources>
          <datasource-dependencies datasource='federated.1213rwk0lh4e9d19rm2em0q3atwd'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province/State]' derivation='None' name='[none:Province/State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' context='true' filter-group='3'>
            <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Province/State:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Confirmed])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Province/State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</column>
            <column>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Province/State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='color' field='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Province/State:nk]' value='#ffffff' />
            <format attr='color' field='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]' value='#ffffff' />
            <format attr='display' field='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk] / [federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Province/State:nk])</rows>
        <cols>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]</cols>
      </table>
      <simple-id uuid='{3EE7E1ED-EBBF-466C-BD60-34233F6569C2}' />
    </worksheet>
    <worksheet name='Q.10'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Q.10.Display a graphical view of differnt countries if chosen in terms of confirmed,deaths and recovered cases in a single graph.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data' name='federated.1213rwk0lh4e9d19rm2em0q3atwd' />
          </datasources>
          <datasource-dependencies datasource='federated.1213rwk0lh4e9d19rm2em0q3atwd'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column caption='Observation Date' datatype='date' name='[ObservationDate]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ObservationDate]' derivation='Month-Trunc' name='[tmn:ObservationDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Recovered:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' context='true' filter-group='3'>
            <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</column>
            <column>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[Multiple Values]' scope='rows' value='Absolute Number' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[tmn:ObservationDate:ok]' value='#ffffff' />
            <format attr='color' field='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[Multiple Values]' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[Multiple Values]</rows>
        <cols>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[tmn:ObservationDate:ok]</cols>
      </table>
      <simple-id uuid='{EB7AC085-DB23-47B9-BF30-5DF305145D63}' />
    </worksheet>
    <worksheet name='Q.2.'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Q.2.Get the values of total deaths along with all not null values of different countries/regions. </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data' name='federated.1213rwk0lh4e9d19rm2em0q3atwd' />
          </datasources>
          <datasource-dependencies datasource='federated.1213rwk0lh4e9d19rm2em0q3atwd'>
            <column caption='Not Null' datatype='real' name='[Calculation_1183602301917593600]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN([Deaths])' />
            </column>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1183602301917593600]' derivation='Sum' name='[sum:Calculation_1183602301917593600:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Calculation_1183602301917593600:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</rows>
        <cols>([federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Calculation_1183602301917593600:qk] + [federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Deaths:qk])</cols>
      </table>
      <simple-id uuid='{1904469C-9EC8-4FD0-B990-99C0B889777A}' />
    </worksheet>
    <worksheet name='Q.3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Q.3.Display different states of India according to their sum of confirmed cases on a map.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0w6thte036kiq717ikjb00oplrsz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0w6thte036kiq717ikjb00oplrsz'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0w6thte036kiq717ikjb00oplrsz].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0w6thte036kiq717ikjb00oplrsz].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[Latitude (generated)]</column>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0w6thte036kiq717ikjb00oplrsz].[max:Confirmed:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' />
              <text column='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' />
              <color column='[federated.0w6thte036kiq717ikjb00oplrsz].[max:Confirmed:qk]' />
              <geometry column='[federated.0w6thte036kiq717ikjb00oplrsz].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State/UnionTerritory:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>No. of Confirmed Cases:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[max:Confirmed:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w6thte036kiq717ikjb00oplrsz].[Latitude (generated)]</rows>
        <cols>[federated.0w6thte036kiq717ikjb00oplrsz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{50B31492-17BD-4852-8F76-40EAA498FA13}' />
    </worksheet>
    <worksheet name='Q.4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Q.4.Use a pie chart to display different states of India along with their respective data for recovered cases and the percentage of the confirmed cases with respect to other states.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0w6thte036kiq717ikjb00oplrsz' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6thte036kiq717ikjb00oplrsz'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[pcto:sum:Confirmed:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w6thte036kiq717ikjb00oplrsz].[Action (State/UnionTerritory)]'>
            <groupfilter function='level-members' level='[State/UnionTerritory]' user:ui-action-filter='[Action6_3CE0A97384C549A99A0CD6AB7D49AAD1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0w6thte036kiq717ikjb00oplrsz].[none:Date:qk]' included-values='in-range'>
            <min>#2020-04-16#</min>
            <max>#2020-04-16#</max>
          </filter>
          <slices>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[none:Date:qk]</column>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[Action (State/UnionTerritory)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' />
              <wedge-size column='[federated.0w6thte036kiq717ikjb00oplrsz].[pcto:sum:Confirmed:qk]' />
              <size column='[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[pcto:sum:Confirmed:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]</field>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[pcto:sum:Confirmed:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Delhi&quot;</value>
                    <value>1578</value>
                    <value>0.12367740418528098</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='127' y='-40' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[pcto:sum:Confirmed:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]</field>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[pcto:sum:Confirmed:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Maharashtra&quot;</value>
                    <value>2919</value>
                    <value>0.2287796849282859</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-121' y='53' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{5443F9B7-3A35-4C2E-8649-36DAA2E1B6E6}' />
    </worksheet>
    <worksheet name='Q.5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Q.5.Use a bar chart to display different states of India in descending order in terms of confirmed cases.Also use marks to tag state with maximum confirmed cases  and state with minimum confirmed cases.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0w6thte036kiq717ikjb00oplrsz' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6thte036kiq717ikjb00oplrsz'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[pcto:sum:Confirmed:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State/UnionTerritory:nk]' />
              <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Nagaland\#&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]</rows>
        <cols>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</cols>
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[pcto:sum:Confirmed:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]</field>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[pcto:sum:Confirmed:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Maharashtra&quot;</value>
                    <value>2919</value>
                    <value>0.2287796849282859</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-121' y='53' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#000000'>Maharashtra is the most Covid-19 effected state in India</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Maharashtra&quot;</value>
                    <value>22095</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#000000'>Nagaland is the least effected Covid-19 state in India</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Nagaland&quot;</value>
                    <value>2</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-216' y='-188' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{8BA6D9FC-9073-47B1-8F49-AADBEFD07477}' />
    </worksheet>
    <worksheet name='Q.6'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Q.6.Show the statistics of different states of India in terms of total confirmed,cured and death cases if state/province is chosen.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0w6thte036kiq717ikjb00oplrsz' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6thte036kiq717ikjb00oplrsz'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cured]' derivation='Max' name='[max:Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0w6thte036kiq717ikjb00oplrsz].[max:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0w6thte036kiq717ikjb00oplrsz].[max:Cured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0w6thte036kiq717ikjb00oplrsz].[max:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0w6thte036kiq717ikjb00oplrsz].[Action (State/UnionTerritory)]'>
            <groupfilter function='member' level='[State/UnionTerritory]' member='&quot;Maharashtra&quot;' user:ui-action-filter='[Action1_035D745F61474A609B4F225205155619]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:State/UnionTerritory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</column>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]</column>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[Action (State/UnionTerritory)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]' value='108' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]' />
              <text column='[federated.0w6thte036kiq717ikjb00oplrsz].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w6thte036kiq717ikjb00oplrsz].[Multiple Values]</rows>
        <cols>([federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk] / [federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{BF6BD800-6EFF-4C15-9784-F6C7ED41694E}' />
    </worksheet>
    <worksheet name='Q.7'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Q.7.Display top 10 countries with maximum number of confirmed cases.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data' name='federated.1213rwk0lh4e9d19rm2em0q3atwd' />
          </datasources>
          <datasource-dependencies datasource='federated.1213rwk0lh4e9d19rm2em0q3atwd'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Country/Region])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;(&apos;St. Martin&apos;,)&quot;' function='range' level='[none:Country/Region:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' field='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]</rows>
        <cols>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</cols>
      </table>
      <simple-id uuid='{451F1EAC-DA6D-4919-A1A5-744C21636BF9}' />
    </worksheet>
    <worksheet name='Q.8'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Q.8.Display top 10 countries with least number of confirmed cases.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data' name='federated.1213rwk0lh4e9d19rm2em0q3atwd' />
          </datasources>
          <datasource-dependencies datasource='federated.1213rwk0lh4e9d19rm2em0q3atwd'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Country/Region])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country/Region:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]</rows>
        <cols>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</cols>
      </table>
      <simple-id uuid='{73438ADB-CC7A-457F-A71E-DA7BC33810C3}' />
    </worksheet>
    <worksheet name='Q.9'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Q.9.Do a comparison between percentage of deaths and percentage of cured of different states of India if chosen.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0w6thte036kiq717ikjb00oplrsz' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6thte036kiq717ikjb00oplrsz'>
            <column caption='%cured' datatype='real' name='[Calculation_1183602301942947844]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MAX([Cured])/MAX([Confirmed]))*100' />
            </column>
            <column caption='%death' datatype='real' name='[Calculation_1183602301943214085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MAX([Deaths])/MAX([Confirmed]))*100' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1183602301942947844]' derivation='User' name='[usr:Calculation_1183602301942947844:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1183602301943214085]' derivation='User' name='[usr:Calculation_1183602301943214085:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w6thte036kiq717ikjb00oplrsz].[Action (State/UnionTerritory)]'>
            <groupfilter function='member' level='[State/UnionTerritory]' member='&quot;Maharashtra&quot;' user:ui-action-filter='[Action1_035D745F61474A609B4F225205155619]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:State/UnionTerritory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</column>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[Action (State/UnionTerritory)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301943214085:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0w6thte036kiq717ikjb00oplrsz].[max:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301942947844:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301943214085:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301942947844:qk] + ([federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301943214085:qk] + [federated.0w6thte036kiq717ikjb00oplrsz].[max:Confirmed:qk]))</rows>
        <cols>([federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk] * [federated.0w6thte036kiq717ikjb00oplrsz].[twk:Date:qk])</cols>
      </table>
      <simple-id uuid='{D2D7D57F-7137-4400-8BA4-8EEE3B922C95}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0w6thte036kiq717ikjb00oplrsz' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6thte036kiq717ikjb00oplrsz'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cured]' derivation='Sum' name='[sum:Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Cured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0w6thte036kiq717ikjb00oplrsz].[none:Date:ok]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-01-30#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-02#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-09#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-16#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-23#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-01#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-08#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-15#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-22#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-29#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-05#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-12#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[none:Date:ok]</column>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0w6thte036kiq717ikjb00oplrsz].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]</rows>
        <cols>[federated.0w6thte036kiq717ikjb00oplrsz].[twk:Date:ok]</cols>
      </table>
      <simple-id uuid='{3D17AACE-8C31-477D-9EB1-5573DEF41350}' />
    </worksheet>
    <worksheet name='State with Max cases v/s Min cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff'>State With Max cases v/s Min cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0w6thte036kiq717ikjb00oplrsz' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6thte036kiq717ikjb00oplrsz'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[pcto:sum:Confirmed:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State/UnionTerritory:nk]' />
              <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Nagaland\#&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]</rows>
        <cols>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</cols>
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[pcto:sum:Confirmed:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]</field>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[pcto:sum:Confirmed:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Maharashtra&quot;</value>
                    <value>2919</value>
                    <value>0.2287796849282859</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-121' y='53' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#000000'>Maharashtra is the most Covid-19 effected state in India</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Maharashtra&quot;</value>
                    <value>22095</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#000000'>Nagaland is the least effected Covid-19 state in India</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Nagaland&quot;</value>
                    <value>2</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-216' y='-188' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{F0AED4D2-8649-4A34-8C33-313DCE655DF0}' />
    </worksheet>
    <worksheet name='Top 10 countries with least number of  cases '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data' name='federated.1213rwk0lh4e9d19rm2em0q3atwd' />
          </datasources>
          <datasource-dependencies datasource='federated.1213rwk0lh4e9d19rm2em0q3atwd'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Country/Region])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country/Region:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]</rows>
        <cols>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</cols>
      </table>
      <simple-id uuid='{3ECA3EE6-8035-4F49-AD60-823A2D2A7B18}' />
    </worksheet>
    <worksheet name='Top 10 countries with max number of  cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data' name='federated.1213rwk0lh4e9d19rm2em0q3atwd' />
          </datasources>
          <datasource-dependencies datasource='federated.1213rwk0lh4e9d19rm2em0q3atwd'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Country/Region])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;(&apos;St. Martin&apos;,)&quot;' function='range' level='[none:Country/Region:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' field='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]</rows>
        <cols>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</cols>
      </table>
      <simple-id uuid='{2CCA0475-CD71-433F-AE74-77E79FD0A62F}' />
    </worksheet>
    <worksheet name='Top 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data' name='federated.1213rwk0lh4e9d19rm2em0q3atwd' />
          </datasources>
          <datasource-dependencies datasource='federated.1213rwk0lh4e9d19rm2em0q3atwd'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province/State]' derivation='None' name='[none:Province/State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' context='true' filter-group='3'>
            <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Province/State:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Confirmed])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Province/State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</column>
            <column>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Province/State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='color' field='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Province/State:nk]' value='#ffffff' />
            <format attr='color' field='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]' value='#ffffff' />
            <format attr='display' field='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk] / [federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Province/State:nk])</rows>
        <cols>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[sum:Confirmed:qk]</cols>
      </table>
      <simple-id uuid='{47E7927E-F319-45D2-8D9F-08F3786D6096}' />
    </worksheet>
    <worksheet name='percentage comparison of Death vs cured'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0w6thte036kiq717ikjb00oplrsz' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6thte036kiq717ikjb00oplrsz'>
            <column caption='%cured_india' datatype='real' name='[Calculation_1183602301931761666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Cured])/SUM([Confirmed]))*100' />
            </column>
            <column caption='%death_india' datatype='real' name='[Calculation_1183602301932183555]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Deaths])/SUM([Confirmed]))*100' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1183602301931761666]' derivation='User' name='[usr:Calculation_1183602301931761666:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1183602301932183555]' derivation='User' name='[usr:Calculation_1183602301932183555:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w6thte036kiq717ikjb00oplrsz].[Action (State/UnionTerritory)]'>
            <groupfilter function='level-members' level='[State/UnionTerritory]' user:ui-action-filter='[Action6_3CE0A97384C549A99A0CD6AB7D49AAD1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w6thte036kiq717ikjb00oplrsz].[none:Date:ok]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-01-30#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-02#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-09#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-16#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-23#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-01#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-08#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-15#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-22#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-29#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-05#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-12#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[none:Date:ok]</column>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[Action (State/UnionTerritory)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301932183555:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' field='[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]' value='#ffffff' />
            <format attr='color' field='[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301932183555:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0w6thte036kiq717ikjb00oplrsz].[twk:Date:qk]' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301931761666:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301931761666:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Week of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[twk:Date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>%cured_india:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301931761666:qk]>%]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301932183555:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Week of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[twk:Date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>%death_india:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301932183555:qk]>%]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301931761666:qk] + ([federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301932183555:qk] + [federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]))</rows>
        <cols>[federated.0w6thte036kiq717ikjb00oplrsz].[twk:Date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Week of Date: </run>
              <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[twk:Date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>%death_india: </run>
              <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301932183555:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0w6thte036kiq717ikjb00oplrsz].[twk:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301932183555:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[twk:Date:qk]</field>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301932183555:qk]</field>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-03-08 00:00:00#</value>
                    <value>0.0</value>
                    <value>&quot;[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301932183555:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-415' y='-93' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Week of Date: </run>
              <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[twk:Date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>%cured_india: </run>
              <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301931761666:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0w6thte036kiq717ikjb00oplrsz].[twk:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301931761666:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[twk:Date:qk]</field>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301931761666:qk]</field>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-03-08 00:00:00#</value>
                    <value>7.6923076923076925</value>
                    <value>&quot;[federated.0w6thte036kiq717ikjb00oplrsz].[usr:Calculation_1183602301931761666:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-130' y='-148' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{0A3CDB41-CEF1-4B8E-A14F-27C6AF5BCAF7}' />
    </worksheet>
    <worksheet name='percentage distributed of confirmed cases of each state'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontcolor='#f5f5f5' fontsize='12'>Top 10 Infected states highlighted</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0w6thte036kiq717ikjb00oplrsz' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6thte036kiq717ikjb00oplrsz'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[pcto:sum:Confirmed:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w6thte036kiq717ikjb00oplrsz].[Action (State/UnionTerritory)]'>
            <groupfilter function='level-members' level='[State/UnionTerritory]' user:ui-action-filter='[Action6_3CE0A97384C549A99A0CD6AB7D49AAD1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0w6thte036kiq717ikjb00oplrsz].[none:Date:qk]' included-values='in-range'>
            <min>#2020-04-16#</min>
            <max>#2020-04-16#</max>
          </filter>
          <slices>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[none:Date:qk]</column>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[Action (State/UnionTerritory)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' />
              <wedge-size column='[federated.0w6thte036kiq717ikjb00oplrsz].[pcto:sum:Confirmed:qk]' />
              <size column='[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[pcto:sum:Confirmed:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]</field>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[pcto:sum:Confirmed:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Delhi&quot;</value>
                    <value>1578</value>
                    <value>0.12367740418528098</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='127' y='-40' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.0w6thte036kiq717ikjb00oplrsz].[pcto:sum:Confirmed:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]</field>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[pcto:sum:Confirmed:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Maharashtra&quot;</value>
                    <value>2919</value>
                    <value>0.2287796849282859</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-121' y='53' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{90A354D9-1CD4-4032-ABB2-824D9E32E3D2}' />
    </worksheet>
    <worksheet name='state-wise no. of confirmed cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0w6thte036kiq717ikjb00oplrsz' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6thte036kiq717ikjb00oplrsz'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]' />
              <text column='[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]</rows>
        <cols>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</cols>
      </table>
      <simple-id uuid='{2F44B502-FC00-4212-8FB1-37E8391C7DF4}' />
    </worksheet>
    <worksheet name='statistics of chosen state'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0w6thte036kiq717ikjb00oplrsz' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6thte036kiq717ikjb00oplrsz'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cured]' derivation='Max' name='[max:Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0w6thte036kiq717ikjb00oplrsz].[max:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0w6thte036kiq717ikjb00oplrsz].[max:Cured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0w6thte036kiq717ikjb00oplrsz].[max:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0w6thte036kiq717ikjb00oplrsz].[Action (State/UnionTerritory)]'>
            <groupfilter function='member' level='[State/UnionTerritory]' member='&quot;Maharashtra&quot;' user:ui-action-filter='[Action1_035D745F61474A609B4F225205155619]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:State/UnionTerritory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</column>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]</column>
            <column>[federated.0w6thte036kiq717ikjb00oplrsz].[Action (State/UnionTerritory)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]' value='108' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]' />
              <text column='[federated.0w6thte036kiq717ikjb00oplrsz].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w6thte036kiq717ikjb00oplrsz].[Multiple Values]</rows>
        <cols>([federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk] / [federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{FD96672C-8475-4371-A1AC-6EFF297C5E49}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Covid 19 India State wise analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='20'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='20' param='vert' type-v2='layout-flow' w='99034' x='483' y='929'>
            <zone fixed-size='70' h='9059' id='21' is-fixed='true' type-v2='title' w='99034' x='483' y='929'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='4' />
                <format attr='background-color' value='#000000' />
              </zone-style>
            </zone>
            <zone h='89083' id='18' type-v2='layout-basic' w='99034' x='483' y='9988'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='background-color' value='#000000' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='43786' id='3' name='state-wise no. of confirmed cases' show-title='false' w='99274' x='303' y='8595' />
        <zone h='10221' id='8' name='state-wise no. of confirmed cases' pane-specification-id='0' param='[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]' type-v2='color' w='10654' x='87833' y='19512' />
        <zone h='47387' id='9' name='statistics of chosen state' w='44552' x='182' y='52033' />
        <zone h='9872' id='15' name='statistics of chosen state' pane-specification-id='0' param='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]' type-v2='color' w='8475' x='34806' y='66086' />
        <zone h='47735' id='16' name='Comparison of death vs cured if choosen state' w='54843' x='44915' y='52149' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='20'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='41' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='40' param='vert' type-v2='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='70' h='9059' id='21' type-v2='title' w='99034' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#000000' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43786' id='3' is-fixed='true' name='state-wise no. of confirmed cases' show-title='false' w='99274' x='303' y='8595'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10221' id='8' name='state-wise no. of confirmed cases' pane-specification-id='0' param='[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]' type-v2='color' w='10654' x='87833' y='19512'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47387' id='9' is-fixed='true' name='statistics of chosen state' w='44552' x='182' y='52033'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9872' id='15' name='statistics of chosen state' pane-specification-id='0' param='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]' type-v2='color' w='8475' x='34806' y='66086'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47735' id='16' is-fixed='true' name='Comparison of death vs cured if choosen state' w='54843' x='44915' y='52149'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5E22FCE1-8A27-4230-A77B-BC78C4A3AFF5}' />
    </dashboard>
    <dashboard name='Covid-19 Dashboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='border-color' value='#000000' />
          <format attr='border-style' value='solid' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='covid_19_data' name='federated.1213rwk0lh4e9d19rm2em0q3atwd' />
      </datasources>
      <datasource-dependencies datasource='federated.1213rwk0lh4e9d19rm2em0q3atwd'>
        <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='63066' id='7' param='horz' type-v2='layout-flow' w='99034' x='483' y='929'>
            <zone h='63066' id='5' type-v2='layout-basic' w='99034' x='483' y='929'>
              <zone h='15899' id='9' name='Confirmed Numbers' w='99034' x='483' y='18317'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29779' id='11' name='Map' w='49516' x='483' y='34216'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29779' id='13' name='Top 5' w='49518' x='49999' y='34216'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='7453' id='15' type-v2='text' w='99034' x='483' y='929'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='20'>Covid-19 Dashboard</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9935' id='17' mode='dropdown' name='Absolute Number (2)' param='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' type-v2='filter' values='cascading' w='99034' x='483' y='8382'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='35076' id='16' name='Absolute Number (2)' w='99034' x='483' y='63995'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='18235' id='18' name='Absolute Number (2)' pane-specification-id='0' param='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]' type-v2='color' w='8509' x='7242' y='71777' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='38' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='37' param='vert' type-v2='layout-flow' w='99034' x='483' y='929'>
                <zone forceUpdate='true' h='7453' id='15' type-v2='text' w='99034' x='483' y='929'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='20'>Covid-19 Dashboard</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='119' h='15899' id='9' is-fixed='true' name='Confirmed Numbers' w='99034' x='483' y='18317'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='230' h='29779' id='11' is-fixed='true' name='Map' w='49516' x='483' y='34216'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='230' h='29779' id='13' is-fixed='true' name='Top 5' w='49518' x='49999' y='34216'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9935' id='17' mode='dropdown' name='Absolute Number (2)' param='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' type-v2='filter' values='cascading' w='99034' x='483' y='8382'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='273' h='35076' id='16' is-fixed='true' name='Absolute Number (2)' w='99034' x='483' y='63995'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18235' id='18' name='Absolute Number (2)' pane-specification-id='0' param='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]' type-v2='color' w='8509' x='7242' y='71777'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{964F601E-2E5F-487B-AC5E-4933380F614E}' />
    </dashboard>
    <dashboard name='Covid-19 India Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='20'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='border-width' value='1' />
          <format attr='border-style' value='solid' />
          <format attr='border-color' value='#000000' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='24' param='vert' type-v2='layout-flow' w='99034' x='483' y='929'>
            <zone fixed-size='64' h='8362' id='25' is-fixed='true' type-v2='title' w='99034' x='483' y='929'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='background-color' value='#000000' />
              </zone-style>
            </zone>
            <zone h='89780' id='22' type-v2='layout-basic' w='99034' x='483' y='9291'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='background-color' value='#000000' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='88037' id='3' name='Covid-19 India' w='35956' x='242' y='11382' />
        <zone fixed-size='85' h='10221' id='8' is-fixed='true' name='Covid-19 India' pane-specification-id='0' param='[federated.0w6thte036kiq717ikjb00oplrsz].[max:Confirmed:qk]' type-v2='color' w='8232' x='24879' y='24158' />
        <zone h='38908' id='9' name='percentage distributed of confirmed cases of each state' w='63499' x='36441' y='11266' />
        <zone h='25784' id='14' leg-item-layout='vert' name='percentage distributed of confirmed cases of each state' pane-specification-id='0' param='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' type-v2='color' w='14286' x='83656' y='21951' />
        <zone h='48664' id='15' name='percentage comparison of Death vs cured' w='62833' x='36985' y='50871' />
        <zone h='7433' id='20' name='percentage comparison of Death vs cured' pane-specification-id='2' param='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]' type-v2='color' w='8475' x='42918' y='76423' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='20'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='45' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='44' param='vert' type-v2='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='64' h='8362' id='25' type-v2='title' w='99034' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#000000' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38908' id='9' is-fixed='true' name='percentage distributed of confirmed cases of each state' w='63499' x='36441' y='11266'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='25784' id='14' leg-item-layout='vert' name='percentage distributed of confirmed cases of each state' pane-specification-id='0' param='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' type-v2='color' w='14286' x='83656' y='21951'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='88037' id='3' is-fixed='true' name='Covid-19 India' w='35956' x='242' y='11382'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='85' h='10221' id='8' name='Covid-19 India' pane-specification-id='0' param='[federated.0w6thte036kiq717ikjb00oplrsz].[max:Confirmed:qk]' type-v2='color' w='8232' x='24879' y='24158'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48664' id='15' is-fixed='true' name='percentage comparison of Death vs cured' w='62833' x='36985' y='50871'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7433' id='20' name='percentage comparison of Death vs cured' pane-specification-id='2' param='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]' type-v2='color' w='8475' x='42918' y='76423'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7F174647-2EF6-43FA-A175-301A3FE5C394}' />
    </dashboard>
    <dashboard name='story covid-19' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='24'>Covid-19 </run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='290' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='1' param='vert' removable='false' type-v2='layout-flow' w='99034' x='483' y='929'>
            <zone h='6388' id='3' type-v2='title' w='99034' x='483' y='929' />
            <zone h='11731' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99034' x='483' y='7317' />
            <zone h='80023' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99034' x='483' y='19048'>
              <flipboard active-id='4' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Overall Covid-19 Cases around the World from Jan 2020-May 21' captured-sheet='Covid-19 Dashboard' id='1' />
                  <story-point caption='Top 10 Countries with Maximum and Minimum number of Covid-19 cases' captured-sheet='top 10 db' id='5' />
                  <story-point caption='Let&apos;s Talk about Covid-19 Scenerio in India' captured-sheet='Covid-19 India Analysis' id='2' />
                  <story-point caption='Moving on with Covid-19 cases among states ' captured-sheet='Covid 19 India State wise analysis' id='3' />
                  <story-point caption='States with Min and Max Covid-19 Cases' captured-sheet='State with Max cases v/s Min cases' id='4' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{6FBB147C-B27A-4CF4-BC9E-9619724EF1AB}' />
    </dashboard>
    <dashboard name='top 10 db'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49071' id='3' name='Top 10 countries with max number of  cases' w='99034' x='483' y='929'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='background-color' value='#000000' />
            </zone-style>
          </zone>
          <zone h='49071' id='5' name='Top 10 countries with least number of  cases ' w='99034' x='483' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='background-color' value='#000000' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='18' param='vert' type-v2='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='280' h='49071' id='3' is-fixed='true' name='Top 10 countries with max number of  cases' w='99034' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#000000' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='5' is-fixed='true' name='Top 10 countries with least number of  cases ' w='99034' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#000000' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D3DDD5F9-F2E5-4D02-B6E8-408DC194279D}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Q.1.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</field>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Province/State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F61D419C-19C1-468A-A24F-577666092319}' />
    </window>
    <window class='worksheet' name='Q.2.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CB6C52FF-62BE-42E6-908B-70BDD4892C6B}' />
    </window>
    <window class='worksheet' name='Q.3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0w6thte036kiq717ikjb00oplrsz].[max:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Province/State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90A5802D-0183-4F89-B5CF-A2EB234CBCB9}' />
    </window>
    <window class='worksheet' name='Q.4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:Date:qk]</field>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B3349535-1C36-41AD-A196-C3DA335CD27E}' />
    </window>
    <window class='worksheet' name='Q.5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:Date:qk]</field>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5BCFF811-0DC4-4605-9675-8E8F5D9ED34D}' />
    </window>
    <window class='worksheet' name='Q.6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]</field>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[Multiple Values]</field>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13612B70-0F9B-4429-82CB-A5577CE24A16}' />
    </window>
    <window class='worksheet' name='Q.7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3E2DCF60-038C-48E3-A433-035454CF4E67}' />
    </window>
    <window class='worksheet' name='Q.8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D92DEBEC-DC34-4D68-AC79-57D6F53F839A}' />
    </window>
    <window class='worksheet' name='Q.9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7132E9FB-DD9A-4474-82AB-4AB1E5942756}' />
    </window>
    <window class='worksheet' name='Q.10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]</field>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</field>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[yr:ObservationDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7ECE0A52-C454-4533-BC99-04F6FB80521B}' />
    </window>
    <window class='worksheet' name='Confirmed Numbers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]</field>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</field>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[yr:ObservationDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{10892736-F25C-4338-8FB4-FADE4C2CA3FE}' />
    </window>
    <window class='worksheet' name='Absolute Number'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]</field>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[yr:ObservationDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9722CAD7-E540-48E4-B979-AFB4C7BAD09E}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3ADE2F44-0EA1-4AA8-957A-221C916CCB35}' />
    </window>
    <window class='worksheet' name='Top 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</field>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Province/State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B09B826C-1497-4CBC-9FA7-E69AC386BB23}' />
    </window>
    <window class='worksheet' name='Absolute Number (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]</field>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</field>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[yr:ObservationDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{51509F64-F646-4455-9FA6-91B8F2137AE5}' />
    </window>
    <window class='worksheet' name='Covid-19 India'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0w6thte036kiq717ikjb00oplrsz].[max:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Province/State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A3884560-DC0C-4AC9-B80B-F72AEE2392A6}' />
    </window>
    <window class='worksheet' name='percentage distributed of confirmed cases of each state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:Date:qk]</field>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{420A044E-7912-45E9-8F83-8CDD185320F1}' />
    </window>
    <window class='worksheet' name='State with Max cases v/s Min cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:Date:qk]</field>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C3B95FC-0FE4-49AD-9DE0-8297B2752965}' />
    </window>
    <window class='worksheet' name='Maximum confirmed cases state wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{74E86DCF-ECC9-4063-BE23-AB03140742C0}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:Date:ok]</field>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[twk:Date:ok]</field>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4DF2765C-AD24-41FD-964A-7AE3B4EF52D0}' />
    </window>
    <window class='worksheet' name='percentage comparison of Death vs cured'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C80EF442-57C3-4190-9570-BD1D8E916CE5}' />
    </window>
    <window class='worksheet' name='state-wise no. of confirmed cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C67B1D48-9488-4765-8659-E48682D3AE16}' />
    </window>
    <window class='worksheet' name='statistics of chosen state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]</field>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[Multiple Values]</field>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3E54E569-3858-4811-A017-5BBB12517BF8}' />
    </window>
    <window class='worksheet' name='Comparison of death vs cured if choosen state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
            <field>[federated.0w6thte036kiq717ikjb00oplrsz].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B68E5BB7-1A8D-4223-9013-554BD80A0E02}' />
    </window>
    <window class='worksheet' name='Top 10 countries with max number of  cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5814568F-3A2D-47E3-BCBA-962B83C9FC44}' />
    </window>
    <window class='worksheet' name='Top 10 countries with least number of  cases '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1213rwk0lh4e9d19rm2em0q3atwd].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BCD1ECCF-CFA5-44E1-96AF-EE67E83F62E6}' />
    </window>
    <window class='dashboard' name='Covid-19 Dashboard'>
      <viewpoints>
        <viewpoint name='Absolute Number (2)'>
          <zoom type='entire-view' />
          <highlight field='[federated.1213rwk0lh4e9d19rm2em0q3atwd].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Confirmed Numbers'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{68C92FB6-6CC4-4777-95D3-AD40BB689EAE}' />
    </window>
    <window class='dashboard' name='Covid-19 India Analysis'>
      <viewpoints>
        <viewpoint name='Covid-19 India'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='percentage comparison of Death vs cured'>
          <zoom type='entire-view' />
          <highlight field='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='percentage distributed of confirmed cases of each state'>
          <zoom type='entire-view' />
          <highlight field='[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{BD38D93E-FEE4-474B-B4B8-8F2F3EB7829E}' />
    </window>
    <window class='dashboard' name='Covid 19 India State wise analysis'>
      <viewpoints>
        <viewpoint name='Comparison of death vs cured if choosen state'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='state-wise no. of confirmed cases'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0w6thte036kiq717ikjb00oplrsz].[none:State/UnionTerritory:nk]</field>
                    <field>[federated.0w6thte036kiq717ikjb00oplrsz].[sum:Confirmed:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Maharashtra&quot;</value>
                  <value>22095</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='statistics of chosen state'>
          <zoom type='entire-view' />
          <highlight field='[federated.0w6thte036kiq717ikjb00oplrsz].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='21' />
      <simple-id uuid='{376FC0FE-04E8-4B80-9CA1-ECDD0EC61A75}' />
    </window>
    <window class='dashboard' name='top 10 db'>
      <viewpoints>
        <viewpoint name='Top 10 countries with least number of  cases '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 countries with max number of  cases'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DEFC9089-2FE6-4CFF-93EB-8291665E59A0}' />
    </window>
    <window class='dashboard' maximized='true' name='story covid-19'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{AFAA2524-FFD9-49B3-AD24-DD391B4C59A5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Absolute Number' width='192'>
      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
      B01t8vtMqKHGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Absolute Number (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Comparison of death vs cured if choosen state' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Confirmed Numbers' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAFhUlEQVR4nO3dy29UdRjG8Wem0xudIk6gLaUtwkwtLR3KTSqmgGCR0sSQaEhIXMCChS6M
      0ZWJK/8JF7pzZeLGkBCC0SYERClyS4G20pL0AoXSclp7GaSX49pWI6TaMXm+n92cxS/vu/ie
      kzmLmUgYhqEAUzFJSiaTGhsby/YswLKLSVIQBKqsrFRBQUG25wGWVSQMwzCRSCgIgmzPAiy7
      aLYHALKJAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGBtUQBlVSk1NW7/yzKStQ1KN2xV6ar8
      fzx4TUVSK/mxafzPxf78sVDH3jmoL7/4SjVbdqkuWarrdwZVv36thoeHdez4CX1z6qzieRHt
      27hBv09nFEYLNft0WsHDfuUm1isnM6KRpwU69NbbOvP5R7r1IDuLAc9iwY2+QHMzk5qamtKB
      PTv1S/+Mjh1t1ci9Xm1Lp9Td2aVHGamsIqVV4SOtKKtSX8+o5p88VnpHs1rf3KXVJSU60JjW
      5Zt3srMR8BwWPAECXescVUvzXrVfuaVXUyU6dbpNmdFxdf56V8od1viDUfVN5aovM6jYmqhG
      gyHNzc1o8vef9Wg8pccPhzU8GVH52jLdmc7OUsCz4g8yYI23QLBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALC2KIBP
      Pv1MJ06e1NoXChUvXqmcaFRF8WIV5OepuaVF8cJSHT9xVEUrChXLy1e8aEU25gb+FbGFF6aD
      YZ0936N333tfFSVl6rlxRZPxcm1eHdNv+Qn13R7QhmS1Pv7wAw1MRjTZe1nfnmnTbJiN8YGl
      WfQEiBWtUn2qWNfaO3Tx/Dmd/vGG4vNjutZ5V+2Xr6ggP0e3O26ou3dQbd+dVXrnK8rNiWRj
      dmDJImEYholEQkEQZHsWYNnxJRjWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWFgXQ3HpE+/c0KhpZ2sHFJZWqWl28
      tEOA/1hs4YW6lyo0MLFO6WBSyZo69XZe18baBnV1dWtz7SYN3R9UdG5K0cKEMrNRrUsU6P7E
      U1UnCtU78kSlxTnquT+u3Xv3a+jC1+ofmcjGXsAzWfQEKK/eoqbahCp3vqH4/JTqmo5oeqBd
      ReVp9V//QQ07tqtm2+tKra9U6+FDiubkqnbrdv104ZxaDh9UNJanln2Nart4NRv7AM8lEoZh
      mEgkFASBJKlp92sam4spJxPo5ZqUOjpuqnpTvbo6b6u+Pq3+7quaTyQ1c++miqvSejF3RsOZ
      WXVdOq+tew8rrmkNTcxqY+U6dV36Xp2Dj7O8IvD3FgUAOOEtEKwRAKwRAKwRAKwRAKwRAKwR
      AKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwR
      AKwRAKwRAKwRAKz9AauOIzKPka07AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Covid 19 India State wise analysis' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Covid-19 Dashboard' width='192'>
      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
      PDvb186boKayzDtdE/5IvUrNXshuc5mZbSMpbrx6LfF4kGJi+JKc+LaeXj568y3y79u/8XUY
      XM8Nm1YxPnyS/3ryx03fXzO4kVMnD7L9pq08/tRzl6RNNkuP9gpgmjz+4728+e6NjCYunz0d
      7ujiuaf/m9tueRk37LyLqN/Jk8/uY+cNW0lMVPjRD7/I3ffcx9VXb0ELLuPAsz/kO//1xGVr
      n81PHrMmw5nmzM3oLj0K111/A/WaiWLUeXzXLgbXrEOvaYydGkJv6BzYt4dUNsOL+/dy47br
      LmPbbH4SmXUOYNQKqO4wkVDgkpz46ckE79j1uPx7vFzi5BPf4ZjPS7FYwOFw4dBUHtv1Ixya
      SqVaw+V0sOfoMUDB4XDyxA8vzrY+NkuXORSgTK5YJTaLG/RCGS+XGS/PrOEjdoav1aoIR6vY
      ULXcmN6uab5bN9nYzMXsESPToFar4b1E2zcNbOtl+zunTZhH3/8YXncPN2zZwPGD+zl4/OQc
      v56blWs2cOLowYvRTJufcGb1At1z77243S50PdP2K92DG7l9Sy8n0tDX4eXAkTOsX7OCg/uO
      sG3bMr7yg/08dO/1/NPnv9L296qm4vROrxVWFIX+Ves5fvQI23fexpqNOZxKDdPpY3z0DCtX
      rSafypDLJdGcPrz+AE6tgdvTy8iZA/T09ZFKjNPV04snGLEVwGZetJ8EmyaHDhwgm8vy/N79
      Mz5WHB5edv0mcIcIOKvsGcpwy0Y/3/ref7Fy9WoC4SjXbhwknSnJZLj5ofCGN7+d08eOs+OG
      bRg46HC5GE+VqSRP09vZwZrNNxELhdh50zZ0w8AolkiWNAY6w/QsX0Pi2EHypeq5T2Vjw2zJ
      cIrKW97xv1AbVfwu2HegObFMUTQMw2BZfze5ksLK3jCHT+W55qpNjJw8TaqQZzAeIpGv8Pye
      59smwymagl5tMHk0xeTRFOP7E+STSXY99l0aqOw/fJh8JsHh02M4zRIl3Ozd+yxHjh3l4Et7
      OXp6lHI+zUuHDjA0dABcXvbtfgpPRw9Dh/aTSqcv4W2z+Uli1jCxx+M2VU2b9XNFUUxFUU3H
      2e84HQ75vqoqpnI2vaFdKoT9sl9XwmvWOECwdz3v//W3svOWHbN95ey+sAb62T1562c9M1O7
      u89vb18bm8VkVgXQq0XyDT+r+rsuZ3tsbC4rsyrAzXfeT270BE6XXdXN5ieXWRXgwN6nKTZc
      DA2dvz/exuZKZ1YFmDx9nJcODzGwfPAyNsfG5vIyqwKsWL2eHTt2UCvlLmd7bGwuK7MogEJf
      TxeZfIlisXh5W2RjcxmZRQFM9h4axsyfIdrVc3lbZGNzGZnVBCokR8DbQXIicTnbY2NzWZk1
      G9QXiZPOTLJxZe/MDxWVHTtvZyDqYiRn0hPzcuTYCCtX9HPswAluvGk5X/j2Pt7wwPV84tP/
      cSnbb2NzQcw6AlSLOfo7Q3zvqZnJcJgGo2MJxsbGcFHg2aMJtq128s3v/oD+5ctQXT6u3zDA
      6bHMApPhbGwuL7MqgNPrw+0JsvWqtTM+UzQnt73sJirVGhXDy3UrY/z4SIX77ryd4RMn2P38
      ITpCLlL5IsePH+fgQTs12ebKZNb1AK961atxu8sofu+Mj81GnX/+zKfANDHNl1AUBdM0eWnf
      bpn/s/uSNtvG5uIw63qAXd/5GqeSNXLZZPuvGIYU9tZ/bWz+p9BeARSVt73znfQtH2T/c3bZ
      EZufbNrmSSuKanZ2D5h33Lb9gnOu7fUA9utKff3/45oLfY6y/bcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Covid-19 India' width='192'>
      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
      Q4MGT43/HwqgybjLzsjBAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Covid-19 India Analysis' width='192'>
      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
      2yhCQxNrtwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Maximum confirmed cases state wise' width='192'>
      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
      QKhq/x9+HoCIa07DpQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q.1.' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q.10' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q.2.' width='192'>
      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
      HaUx+W+eMekAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q.3' width='192'>
      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
      Q4MGT43/HwqgybjLzsjBAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q.4' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q.5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q.6' width='192'>
      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
      af8LYBE/qNQ3O38AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q.7' width='192'>
      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
      /wGqTH80bwX6hAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q.8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q.9' width='192'>
      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
      PfciAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='State with Max cases v/s Min cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 countries with least number of  cases ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 countries with max number of  cases' width='192'>
      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
      /wGqTH80bwX6hAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 5' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='percentage comparison of Death vs cured' width='192'>
      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
      r5MCkKWSy/8Hn27LAw94cFgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='percentage distributed of confirmed cases of each state' width='192'>
      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
      rgIaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='state-wise no. of confirmed cases' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='statistics of chosen state' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='story covid-19' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top 10 db' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
